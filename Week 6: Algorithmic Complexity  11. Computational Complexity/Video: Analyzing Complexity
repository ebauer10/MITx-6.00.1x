#polynomial complexity
def isSubset(L1, L2):
  for e1 in L1:
    matched = False
    for e2 in L2:
      if e1 == e2:
        matched = True
        break
    if not matched:
      return False
  return True

#quadratic complexity
def intersect(L1, L2):
  tmp = []
  for e1 in L1:
    for e2 in L2:
      if e1 == e2:
        tmp.append(e1)
  res = []
  for e in tmp:
    if not(e in res):
      res.append(e) 
  return res

def g(n):
  """assume n >= 0"""
  for i in range(n):
    for j in range(n):
      x += 1
  return x
