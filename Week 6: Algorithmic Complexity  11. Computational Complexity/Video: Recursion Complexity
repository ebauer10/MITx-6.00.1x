#logarithmic complexity
def h(n):
  """ assume n an int >= 0 """
  answer = 0
  s = str(n) 
  for c in s:
    answer += int(c)
  return answer

#linear complexity
def fib_iter(n):
  if n == 0:
    return 0
  if n == 1:
    return 1
  else:
    fib_i = 0
    fib_ii = 1
    for i in range(n-1):
      tmp = fib_i
      fib_i = fib_ii
      fib_ii = tmp + fib_ii
    return fib_ii

#exponential complexity
def fib_recur(n):
  """ assumes n an int >= 0 """
  if n == 0 :
    return 0
  elif n == 1:
    return 1
  else:
    return fib_recur(n-1) + fib_recur(n-2)

#linear complexity
def sum_list(L):
  total = 0
  for e in L:
    total = total + e
  return total
