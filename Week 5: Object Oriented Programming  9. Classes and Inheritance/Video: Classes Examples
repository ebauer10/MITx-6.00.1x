#Example 1

class fraction(object):
  def __init__(self, numer, denom):
    self.numer = numer
    self.denom = denom
  def __str__(self):
    return str(self.numer)+'/'+str(self.denom)
  def getNumer(self):
    return self.numer
  def getDenom(self):
    return self.denom
  def __add__(self, other):
    numerNew = other.getDenom() * self.getNumer() + other.getNumer() * self.getDenom()
    denomNew = other.getDenom() * self.getDenom()
    return fraction(numerNew, denomNew)
  def __sub__(self, other):
    numerNew = other.getDenom() * self.getNumer() - other.getNumer() * self.getDenom()
    denomNew = other.getDenom() * self.getDenom()
    return fraction(numerNew, denomNew)
  def convert(self):
    return self.getNumer() / self.getDenom()


oneHalf = fraction(1, 2)
twoThirds = fraction(2, 3)
print(oneHalf)
print(twoThirds)
print(oneHalf.getNumer())
print(fraction.getDenom(twoThirds))
new = oneHalf + twoThirds
print(new)
threeQuarters = fraction(3, 4)
print(threeQuarters)
secondNew = twoThirds - threeQuarters
print(secondNew)
print(secondNew.convert())

#Example 2

class intSet(object):
  def __init__(self):
    self.vals = []
  def insert(self, e):
    if not e in self.vals:
      self.vals.append(e)
  def member(self, e):
    return e in self.vals
  def remove(self, e):
    try:
      self.vals.remove(e)
    except:
      raise ValueError(str(e)+'not found')
  def __str__(self):
    self.vals.sort()
    result = ''
    for e in self.vals:
      result = result + str(e) + ','
    return '{' + result[:-1] + '}'

s = intSet()
print(s)
s.insert(3)
s.insert(4)
s.insert(3)
print(s.member(4))
print(s.member(6))
print(s)
s.remove(3)
s.insert(6)
print(s)
print(s.remove(3))
